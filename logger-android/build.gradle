apply plugin: 'com.android.library'



android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildToolsVersion

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.compileSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    compileOnly deps.androidx.compat
    implementation project(':logger')

    testImplementation deps.junit
    androidTestImplementation deps.androidx.test.junit
    androidTestImplementation deps.androidx.test.espresso_core
}

apply plugin: 'com.github.dcendents.android-maven'

group = GROUP
version = VERSION

//task sourcesJar(type: Jar) {
//    classifier  'sources'
//    from android.sourceSets.main.java.sourceFiles
//}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            owner.classpath += variant.javaCompile.classpath
        }
    }
}

//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier 'javadoc'
//    from javadoc.destinationDir
//}

//task classesJar(type: Jar) {
//    from "$buildDir/intermediates/javac/debug/classes/"
//}
//
//artifacts {
//    archives classesJar
//    archives javadocJar
//    archives sourcesJar
//}

